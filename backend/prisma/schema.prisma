// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String @db.VarChar(50)
  username String @db.VarChar(50)
  email String @unique
  password String
  role Role @default(User)
  chats UserChat[]
  messages Message[]
}

model Chat {
  id String @id @default(uuid())
  name String
  users UserChat[]
  messages Message[]
}

model UserChat {
  user User @relation(fields : [userId], references : [id], onDelete: Cascade)
  chat Chat @relation(fields : [chatId], references : [id], onDelete: Cascade)
  userId String
  chatId String  
  @@id([userId, chatId])
}

model Message {
 id String @id @default(uuid()) 
 content String
 created_at DateTime @default(now())
 updated_at DateTime @default(now())
 chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
 chatId String @default(uuid())
 user User @relation(fields : [senderId], references: [id], onDelete: Cascade)
 senderId String @default(uuid())
 senderName String
}

enum Role {
  Admin
  User
}